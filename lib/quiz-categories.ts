export interface QuizCategory {
  name: string
  icon: string
  subjects: string[]
  prompts: string[]
}

export const QUIZ_CATEGORIES: QuizCategory[] = [
  {
    name: "Changement Climatique",
    icon: "üå°Ô∏è",
    subjects: ["r√©chauffement", "CO2", "effet de serre", "temp√©ratures", "glaciers", "niveau des mers"],
    prompts: [
      "G√©n√®re une affirmation sur le r√©chauffement climatique avec des donn√©es chiffr√©es pr√©cises",
      "Cr√©e une question sur les cons√©quences du changement climatique",
      "Pose une question sur les causes des √©missions de gaz √† effet de serre",
    ],
  },
  {
    name: "Biodiversit√©",
    icon: "ü¶ã",
    subjects: ["esp√®ces menac√©es", "extinction", "√©cosyst√®mes", "faune", "flore", "habitats"],
    prompts: [
      "G√©n√®re une question sur les esp√®ces en voie de disparition",
      "Cr√©e une affirmation sur la biodiversit√© et les √©cosyst√®mes",
      "Pose une question sur la protection des habitats naturels",
    ],
  },
  {
    name: "√ânergies",
    icon: "‚ö°",
    subjects: ["renouvelables", "fossiles", "√©olien", "solaire", "nucl√©aire", "consommation"],
    prompts: [
      "G√©n√®re une question comparative entre √©nergies renouvelables et fossiles",
      "Cr√©e une affirmation sur l'efficacit√© des panneaux solaires ou √©oliennes",
      "Pose une question sur la consommation √©nerg√©tique mondiale",
    ],
  },
  {
    name: "Pollution",
    icon: "üè≠",
    subjects: ["plastique", "air", "eau", "sols", "d√©chets", "microplastiques"],
    prompts: [
      "G√©n√®re une question sur la pollution plastique dans les oc√©ans",
      "Cr√©e une affirmation sur la qualit√© de l'air en ville",
      "Pose une question sur les microplastiques et leur impact",
    ],
  },
  {
    name: "Oc√©ans",
    icon: "üåä",
    subjects: ["acidification", "coraux", "p√™che", "niveau", "courants", "vie marine"],
    prompts: [
      "G√©n√®re une question sur l'acidification des oc√©ans",
      "Cr√©e une affirmation sur les r√©cifs coralliens",
      "Pose une question sur la surp√™che et ses cons√©quences",
    ],
  },
  {
    name: "For√™ts",
    icon: "üå≥",
    subjects: ["d√©forestation", "Amazon", "reforestation", "bois", "papier", "carbone"],
    prompts: [
      "G√©n√®re une question sur la d√©forestation en Amazonie ou ailleurs",
      "Cr√©e une affirmation sur le r√¥le des for√™ts dans le climat",
      "Pose une question sur la reforestation et ses b√©n√©fices",
    ],
  },
  {
    name: "Agriculture",
    icon: "üåæ",
    subjects: ["bio", "pesticides", "√©levage", "v√©g√©tarien", "eau", "sols"],
    prompts: [
      "G√©n√®re une question sur l'agriculture biologique vs conventionnelle",
      "Cr√©e une affirmation sur l'impact de l'√©levage sur l'environnement",
      "Pose une question sur l'usage de l'eau en agriculture",
    ],
  },
  {
    name: "Transport",
    icon: "üöó",
    subjects: ["√©lectrique", "avion", "train", "v√©lo", "carburants", "mobilit√©"],
    prompts: [
      "G√©n√®re une question sur les v√©hicules √©lectriques vs thermiques",
      "Cr√©e une affirmation sur l'impact carbone des transports",
      "Pose une question sur les alternatives de mobilit√© durable",
    ],
  },
  {
    name: "D√©chets",
    icon: "‚ôªÔ∏è",
    subjects: ["recyclage", "compost", "incin√©ration", "tri", "r√©duction", "√©conomie circulaire"],
    prompts: [
      "G√©n√®re une question sur l'efficacit√© du recyclage",
      "Cr√©e une affirmation sur la r√©duction des d√©chets",
      "Pose une question sur le compostage et ses b√©n√©fices",
    ],
  },
  {
    name: "Innovations",
    icon: "üî¨",
    subjects: ["technologies vertes", "captage CO2", "hydrog√®ne", "batteries", "smart cities"],
    prompts: [
      "G√©n√®re une question sur les nouvelles technologies √©cologiques",
      "Cr√©e une affirmation sur l'hydrog√®ne vert ou les batteries",
      "Pose une question sur les innovations pour capturer le CO2",
    ],
  },
]

// Syst√®me de rotation et historique
let categoryHistory: number[] = []
const lastUsedCategories: Set<number> = new Set()

export function getNextCategory(): QuizCategory {
  // Si on a utilis√© toutes les cat√©gories, on reset
  if (lastUsedCategories.size >= QUIZ_CATEGORIES.length) {
    lastUsedCategories.clear()
  }

  // Trouver les cat√©gories non utilis√©es r√©cemment
  const availableCategories = QUIZ_CATEGORIES.map((_, index) => index).filter((index) => !lastUsedCategories.has(index))

  // S√©lectionner al√©atoirement parmi les disponibles
  const selectedIndex = availableCategories[Math.floor(Math.random() * availableCategories.length)]

  // Marquer comme utilis√©e
  lastUsedCategories.add(selectedIndex)
  categoryHistory.push(selectedIndex)

  // Garder seulement les 5 derni√®res dans l'historique
  if (categoryHistory.length > 5) {
    categoryHistory = categoryHistory.slice(-5)
  }

  return QUIZ_CATEGORIES[selectedIndex]
}

export function getRandomPromptFromCategory(category: QuizCategory): string {
  return category.prompts[Math.floor(Math.random() * category.prompts.length)]
}

export function getRandomSubjectFromCategory(category: QuizCategory): string {
  return category.subjects[Math.floor(Math.random() * category.subjects.length)]
}
